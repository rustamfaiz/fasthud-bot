import asyncio
import os
from aiogram import Bot, Dispatcher, F
from aiogram.enums import ParseMode
from aiogram.fsm.context import FSMContext
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.types import Message, CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.fsm.state import State, StatesGroup
from aiogram.utils.keyboard import InlineKeyboardBuilder
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –∏–∑ .env
load_dotenv()
BOT_TOKEN = os.getenv("BOT_TOKEN")

# FSM –°–æ—Å—Ç–æ—è–Ω–∏—è
class PurchaseStates(StatesGroup):
    choosing_region = State()
    entering_promocode = State()
    confirming_promocode = State()
    waiting_for_payment = State()
    collecting_user_data = State()
    generating_pdf = State()

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
bot = Bot(token=BOT_TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher(storage=MemoryStorage())

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
WELCOME_TEXT = (
    "–ü–æ–∑–¥—Ä–∞–≤–ª—è—é.\n"
    "–ù–æ–≤–∞—è –ø–æ–ø—ã—Ç–∫–∞. –ù–æ–≤—ã–π –∑–∞—Ö–æ–¥. –û—á–µ—Ä–µ–¥–Ω–æ–π —Å—Ç–∞—Ä—Ç –ø—Ä–æ—Ç–∏–≤ –∂–∏—Ä–∞, –∫–æ—Ç–æ—Ä—ã–π –≤—Å—ë –µ—â—ë —Å —Ç–æ–±–æ–π.\n\n"
    "–î–∞–≤–∞–π —á–µ—Å—Ç–Ω–æ ‚Äî —É —Ç–µ–±—è —É–∂–µ –±—ã–ª–∏ –¥–∏–µ—Ç—ã, –±—ã–ª –±–µ–≥, –±—ã–ª–∞ –Ω–∞–¥–µ–∂–¥–∞ —É–≤–∏–¥–µ—Ç—å –ø–ª–æ—Å–∫–∏–π –∂–∏–≤–æ—Ç ‚Äî —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ä–∞–∑, –±–µ–∑ –≤–æ–∑–≤—Ä–∞—Ç–∞.\n"
    "–ù–æ –≤–º–µ—Å—Ç–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ ‚Äî —Å–Ω–æ–≤–∞ —Ü–∏—Ñ—Ä—ã —Ç—É–¥–∞-—Å—é–¥–∞. –ò —Å–Ω–æ–≤–∞ –Ω–∏—á–µ–≥–æ.\n\n"
    "–ü—Ä–∏–≤–µ—Ç. –ú–µ–Ω—è –∑–æ–≤—É—Ç –†—É—Å—Ç–∞–º.\n"
    "–í 2019 –≥–æ–¥—É —è —Å–∂—ë–≥ –¥–≤–∞–¥—Ü–∞—Ç—å –∫–∏–ª–æ–≥—Ä–∞–º–º–æ–≤ ‚Äî —á–µ—Ä–µ–∑ –≥–æ–ª–æ–¥, –±–µ–≥, –ø–æ–ª–Ω–æ–µ –æ—Ç—Ä–µ—á–µ–Ω–∏–µ –æ—Ç —Å–ª–∞–¥–∫–æ–≥–æ, –º—É—á–Ω–æ–≥–æ –∏ –∂–∏–∑–Ω–∏.\n"
    "–ù–∞—Å—Ç–æ–ª—å–∫–æ —É—à—ë–ª –≤ –ø—Ä–æ—Ü–µ—Å—Å, —á—Ç–æ —Ä–∞–∑–æ–±—Ä–∞–ª —Ñ–∏–∑–∏–æ–ª–æ–≥–∏—é, –Ω—É—Ç—Ä–∏—Ü–∏–æ–ª–æ–≥–∏—é –∏ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ—á–Ω—É—é –º–µ—Ö–∞–Ω–∏–∫—É –¥–æ –∫–æ—Å—Ç–µ–π.\n"
    "–ü–æ—Ç–æ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ –Ω–∞–±–∏—Ä–∞–ª –∂–∏—Ä ‚Äî –∏ —Å–∂–∏–≥–∞–ª –µ–≥–æ —Å–Ω–æ–≤–∞. –ù–µ—Å–∫–æ–ª—å–∫–æ —Ä–∞–∑. –°–∏—Å—Ç–µ–º–Ω–æ. –ë–µ–∑ –≥–æ–ª–æ–¥–∞, –±–µ–≥–∞ –∏ —Å–æ –≤–∫—É—Å–æ–º –∂–∏–∑–Ω–∏. –ó–∞ 4 –º–µ—Å—è—Ü–∞.\n\n"
    "–¢–∞–∫ –∏ –ø–æ—è–≤–∏–ª–∞—Å—å —ç—Ç–∞ –∫–Ω–∏–≥–∞.\n"
    "–ù–µ –∏–∑ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è. –ê –∏–∑ –ø—Ä–æ–≤–µ—Ä–µ–Ω–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–∏ –≤ –±–æ—Ä—å–±–µ —Å —Ñ–∏—Ç–Ω–µ—Å-–º–∏—Ñ–∞–º–∏ –∏ –±–µ—Å–ø–æ–ª–µ–∑–Ω—ã–º–∏ —Ä–∏—Ç—É–∞–ª–∞–º–∏.\n\n"
    "–≠—Ç–æ –Ω–µ –ø—Ä–æ –º–æ—Ç–∏–≤–∞—Ü–∏—é. –≠—Ç–æ –ø—Ä–æ –º–µ—Ç–æ–¥.\n"
    "–ö–∞–∫ –∑–∞ 4 –º–µ—Å—è—Ü–∞ —É–±—Ä–∞—Ç—å –∂–∏—Ä ‚Äî –∏ –Ω–µ –≤–µ—Ä–Ω—É—Ç—å –µ–≥–æ –±–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–¥–∞.\n\n"
    "‚¨áÔ∏è –í—ã–±–µ—Ä–∏, —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å:"
)

# –ö–Ω–æ–ø–∫–∏
def start_keyboard():
    kb = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="üí∏ –ü–æ–ª—É—á–∏—Ç—å –∫–Ω–∏–≥—É", callback_data="get_book")],
            [InlineKeyboardButton(text="üéØ –ß—Ç–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å –∏–∑ —ç—Ç–æ–π –∫–Ω–∏–≥–∏", callback_data="about_book")]
        ]
    )
    return kb

# –•—ç–Ω–¥–ª–µ—Ä /start
@dp.message(F.text == "/start")
async def cmd_start(message: Message, state: FSMContext):
    print("[LOG] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—É—Å—Ç–∏–ª /start")
    await message.answer(WELCOME_TEXT, reply_markup=start_keyboard())

# –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ (–≤—Ä–µ–º–µ–Ω–Ω–æ)
@dp.callback_query(F.data == "get_book")
async def handle_get_book(callback: CallbackQuery, state: FSMContext):
    print("[LOG] –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '–ü–æ–ª—É—á–∏—Ç—å –∫–Ω–∏–≥—É'")
    await callback.answer("–≠—Ç–∞–ø –ø–æ–∫—É–ø–∫–∏ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –ø–æ–∑–∂–µ.")

@dp.callback_query(F.data == "about_book")
async def handle_about_book(callback: CallbackQuery, state: FSMContext):
    print("[LOG] –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ '–ß—Ç–æ —Ç—ã –ø–æ–ª—É—á–∏—à—å'")
    await callback.answer("–û–ø–∏—Å–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–æ –ø–æ–∑–∂–µ.")

# –ó–∞–ø—É—Å–∫
async def main():
    print("[LOG] –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
